rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // テスト用コレクション（開発時のみ）
    match /test/{document} {
      allow read, write: if true;
    }
    
    // イベント情報（読み取り専用、管理者のみ書き込み可能）
    match /events/{eventId} {
      allow read: if true;
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
      
      // イベント内のサークル情報（サブコレクション）
      match /circles/{circleId} {
        allow read: if resource.data.isPublic == true;
        allow create: if request.auth != null;
        allow update: if request.auth != null && 
                         (request.auth.uid == resource.data.ownerId || 
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
        allow delete: if request.auth != null && 
                         (request.auth.uid == resource.data.ownerId || 
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
      }
    }
    
    // サークル情報
    match /circles/{circleId} {
      allow read: if resource.data.isPublic == true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                       (request.auth.uid == resource.data.ownerId || 
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
      allow delete: if request.auth != null && 
                       (request.auth.uid == resource.data.ownerId || 
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
    }
    
    // ユーザー情報
    match /users/{userId} {
      allow read: if request.auth != null && 
                     (request.auth.uid == userId || 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
      allow write: if request.auth != null && 
                      (request.auth.uid == userId || 
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // ユーザーのブックマーク（サブコレクション）
      match /bookmarks/{circleId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // イベント統計情報
    match /eventStats/{eventId} {
      allow read: if true;
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }
    
    // イベント履歴
    match /eventHistory/{historyId} {
      allow read, write: if request.auth != null && 
                           request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
                      request.auth.uid == request.resource.data.userId;
    }
    
    // 編集権限申請
    match /edit_permission_requests/{requestId} {
      allow read: if request.auth != null && 
                     (request.auth.uid == resource.data.userId || 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
      allow create: if request.auth != null && 
                      request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && 
                       (request.auth.uid == resource.data.userId || 
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
    }
    
    // サークル権限
    match /circle_permissions/{permissionId} {
      allow read: if request.auth != null && 
                     (request.auth.uid == resource.data.userId || 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }
    
    // 通知
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
                           request.auth.uid == resource.data.userId;
    }
    
    // 購入予定（テスト用に一時的に緩和）
    match /users/{userId}/purchase_plans/{planId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // 予算サマリー
    match /users/{userId}/budget_summaries/{eventId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}